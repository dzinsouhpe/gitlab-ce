#!/usr/bin/env bash

# Copyright (c) 2020, Hewlett Packard Enterprise Development LP.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o pipefail
SELF=$(readlink -nf $0)
export CONFIG_BASE_DIR=$(dirname ${SELF})

source ${CONFIG_BASE_DIR}/logging.sh
source ${CONFIG_BASE_DIR}/utils.sh

if [[ "$1" == "--addnodes" ]]; then
    ## Nothing to do on the existing nodes when we receive this notification.
    exit 0
elif [[ "$1" == "--delnodes" ]]; then
    ## Nothing to do on the existing nodes when we receive this notification.
    exit 0
elif [[ "$1" == "--configure" ]]; then
    log "Starting configuration ... "

    ## Fall through to start the configuration.
else
    echo "ERROR: Unknown command line option(s): '$@'"
    exit 0
fi

source ${CONFIG_BASE_DIR}/macros.sh

if [[ -z "${CI_SERVER_URL}" ]]; then
    echo "CI_SERVER_URL not provided. We will check if tenant has gitlab-ce deployed."
    
    if [[ $(bdvcli -g connections.clusters | grep -i "gitlab-ce") == "gitlab-ce" ]]; then
        echo "Found tenant gitlab-ce. We will retrieve CI_SERVER_URL from this instance."
        CI_SERVER_URL=$(bdvcli -g connections.clusters.gitlab-ce.services.gitlab.1.gitlab.endpoints)
    else
        echo "CI_SERVER_URL not found. Exit with error code 101."
        exit 101
    fi
fi
echo "CI_SERVER_URL found: [${CI_SERVER_URL}]."
export CI_SERVER_URL=${CI_SERVER_URL}

if [[ -z "${REGISTRATION_TOKEN}" ]]; then
    echo "REGISTRATION_TOKEN not provided. Exit with error code 102."
    exit 102
fi
echo "REGISTRATION_TOKEN found."

gitlab-runner start
gitlab-runner register --non-interactive --executor shell